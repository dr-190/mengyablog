<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>亚洲云IDC「PCS.B型」美国服务器深度评测：千兆三网直连的建站利器</title>
      <link href="/posts/911b47ce.html"/>
      <url>/posts/911b47ce.html</url>
      
        <content type="html"><![CDATA[<h2 id="亚洲云官网"><a href="#亚洲云官网" class="headerlink" title="亚洲云官网"></a>亚洲云官网</h2><p><a href="https://www.asiayun.com/aff/FTLHMJYA">亚洲云官网快速直达</a></p><h3 id="🔍-基础配置总览"><a href="#🔍-基础配置总览" class="headerlink" title="🔍 基础配置总览"></a>🔍 基础配置总览</h3><table><thead><tr><th>项目</th><th>参数</th></tr></thead><tbody><tr><td>实例规格</td><td>美国精品·大带宽·PCS.B型</td></tr><tr><td>价格</td><td>￥80&#x2F;月</td></tr><tr><td>数据中心</td><td>美国·洛杉矶（Zenlayer机房）</td></tr><tr><td>CPU</td><td>2核 AMD EPYC 7K62</td></tr><tr><td>内存</td><td>2GB DDR4</td></tr><tr><td>系统盘</td><td>40GB（可选 SSD）</td></tr><tr><td>数据盘</td><td>40GB（合计 80GB）</td></tr><tr><td>带宽</td><td>1000Mbps 对等（上下行）</td></tr><tr><td>月流量</td><td>500GB（每 30 天重置）</td></tr><tr><td>网络类型</td><td>经典网络，独立 IPv4</td></tr><tr><td>快照&#x2F;备份</td><td>各赠送 1 个</td></tr><tr><td>安全性</td><td>随机端口 + 防爆破机制</td></tr><tr><td>回程线路</td><td>CN2 GIA + 联通 9929 + 移动 CMIN2（全三网精品）</td></tr></tbody></table><hr><h2 id="🖥️-一、性能实测（建站场景）"><a href="#🖥️-一、性能实测（建站场景）" class="headerlink" title="🖥️ 一、性能实测（建站场景）"></a>🖥️ 一、性能实测（建站场景）</h2><h3 id="综合测试截图"><a href="#综合测试截图" class="headerlink" title="综合测试截图"></a>综合测试截图</h3><p><img src="https://static.bcmcdn.com/coco/player/unstable/ryl5L6P0Jl.image/png?hash=Fm8OrSMisIDc699-iYuVIb1q6Fqa"></p><h3 id="✅-CPU-内存性能"><a href="#✅-CPU-内存性能" class="headerlink" title="✅ CPU &amp; 内存性能"></a>✅ CPU &amp; 内存性能</h3><p>测试工具：Sysbench、LemonBench</p><ul><li><strong>CPU（单核）：1303 分</strong></li><li><strong>CPU（双核）：2602 分</strong></li></ul><blockquote><p>搭载 AMD EPYC 7K62 服务器级处理器，主频 2.6GHz，支持 AES-NI、AMD-V，PHP 网站环境下表现出色，适合运行 WordPress、Typecho、Discuz! 等常见 CMS。</p></blockquote><ul><li><strong>内存性能</strong><ul><li>读速（单线程）：<strong>34.6 GB&#x2F;s</strong></li><li>写速（单线程）：<strong>15.5 GB&#x2F;s</strong></li></ul></li></ul><blockquote><p>DDR4 高速内存在缓存响应、数据库读取等方面具备良好性能，满足中小站点需求。</p></blockquote><hr><h2 id="💽-二、磁盘-I-O-性能（网页加载核心）"><a href="#💽-二、磁盘-I-O-性能（网页加载核心）" class="headerlink" title="💽 二、磁盘 I&#x2F;O 性能（网页加载核心）"></a>💽 二、磁盘 I&#x2F;O 性能（网页加载核心）</h2><ul><li><strong>dd 写入（1GB，1M block）：721 MB&#x2F;s</strong></li><li><strong>dd 读取：3.4 GB&#x2F;s</strong></li><li><strong>fio 综合读写：1.67 GB&#x2F;s（1MB块）</strong></li></ul><blockquote><p>高 IOPS 性能非常适合部署 WordPress、Laravel 等动态框架类网站，文件&#x2F;数据库读取迅速，适配高交互、频访问场景（如 API 服务、电商、展示站）。</p></blockquote><hr><h2 id="🌐-三、网络质量（中国大陆访问体验）"><a href="#🌐-三、网络质量（中国大陆访问体验）" class="headerlink" title="🌐 三、网络质量（中国大陆访问体验）"></a>🌐 三、网络质量（中国大陆访问体验）</h2><h3 id="📡-回程线路质量"><a href="#📡-回程线路质量" class="headerlink" title="📡 回程线路质量"></a>📡 回程线路质量</h3><table><thead><tr><th>运营商</th><th>回程线路</th><th>延迟（参考）</th></tr></thead><tbody><tr><td>电信</td><td>CN2 GIA 精品</td><td>稳定约 150ms</td></tr><tr><td>联通</td><td>9929 优质线路</td><td>广州&#x2F;深圳约 170ms</td></tr><tr><td>移动</td><td>CMIN2 精品线路</td><td>稳定约 125ms</td></tr></tbody></table><blockquote><p>三网直连，无绕路、不跳点，适合对访问稳定性要求高的大陆方向项目。</p></blockquote><hr><h3 id="🎬-流媒体解锁能力（内容推荐）"><a href="#🎬-流媒体解锁能力（内容推荐）" class="headerlink" title="🎬 流媒体解锁能力（内容推荐）"></a>🎬 流媒体解锁能力（内容推荐）</h3><ul><li>✅ <strong>Netflix（完整解锁）</strong></li><li>✅ <strong>YouTube（IAD 节点，4K 流畅）</strong></li><li>✅ <strong>Disney+ &#x2F; Amazon Prime &#x2F; ChatGPT &#x2F; Gemini</strong>：支持美区访问</li><li>✅ <strong>TikTok US 区域</strong>：可用于内容分发、账号运营</li></ul><p>💡 <strong>推荐用途拓展</strong>：</p><ul><li>外贸站群、跨境官网部署</li><li>AI 应用中转节点（ChatGPT &#x2F; Gemini &#x2F; Claude）</li><li>视频缓存代理、CDN 边缘节点部署等</li></ul><hr><h2 id="📬-邮件支持-端口开放性"><a href="#📬-邮件支持-端口开放性" class="headerlink" title="📬 邮件支持 &amp; 端口开放性"></a>📬 邮件支持 &amp; 端口开放性</h2><ul><li>支持 SMTPS（SSL 端口）通信，如 Gmail、Yahoo、Zoho 等</li><li>⚠️ 自建邮局（Mailcow&#x2F;iRedMail）需设置 rDNS 及合规发信参数</li></ul><hr><h2 id="🔐-安全与兼容性表现"><a href="#🔐-安全与兼容性表现" class="headerlink" title="🔐 安全与兼容性表现"></a>🔐 安全与兼容性表现</h2><ul><li><strong>独立 IP，无共享风险</strong></li><li><strong>用途定位：企业级，非滥用型 IP</strong></li><li><strong>黑名单记录：0</strong></li><li><strong>平台兼容性</strong>：Google Play、Steam 等识别为美区，稳定使用无阻</li></ul><hr><h2 id="📊-带宽实测（SpeedTest）"><a href="#📊-带宽实测（SpeedTest）" class="headerlink" title="📊 带宽实测（SpeedTest）"></a>📊 带宽实测（SpeedTest）</h2><table><thead><tr><th>地区</th><th>上传</th><th>下载</th><th>延迟</th></tr></thead><tbody><tr><td>洛杉矶本地</td><td>982 Mbps</td><td>644 Mbps</td><td>47ms</td></tr><tr><td>上海电信</td><td>298 Mbps</td><td>550 Mbps</td><td>134ms</td></tr><tr><td>上海联通</td><td>91 Mbps</td><td>704 Mbps</td><td>154ms</td></tr><tr><td>东京方向</td><td>522 Mbps</td><td>967 Mbps</td><td>121ms</td></tr></tbody></table><blockquote><p>下载上传表现优异，适合部署 Git 仓库、静态镜像、Docker Registry、轻量 CDN 节点等</p></blockquote><hr><h2 id="🧭-建站实用建议"><a href="#🧭-建站实用建议" class="headerlink" title="🧭 建站实用建议"></a>🧭 建站实用建议</h2><p><strong>推荐应用场景：</strong></p><ul><li>中小型个人&#x2F;企业网站</li><li>多语言展示站，海外访问优化良好</li><li>WordPress &#x2F; Typecho &#x2F; Laravel 等 PHP 项目</li><li>AI 应用请求中转，加速体验</li><li>外贸站、跨境 SEO 节点部署</li></ul><p><strong>推荐软件组合：</strong></p><ul><li>控制面板：宝塔 &#x2F; HestiaCP &#x2F; OneNav</li><li>服务栈：Nginx + PHP-FPM + MariaDB</li><li>性能优化：Redis + opcache + Cloudflare CDN</li></ul><hr><h2 id="💡-购买建议"><a href="#💡-购买建议" class="headerlink" title="💡 购买建议"></a>💡 购买建议</h2><ul><li><strong>推荐对象</strong>：注重性价比的开发者、个人站长、初创团队</li><li><strong>扩展灵活性</strong>：可加购 100GB 流量（￥10）及硬盘扩容</li><li><strong>注意事项</strong>：<ul><li>IP 属数据中心标记，正规业务无影响</li><li>内存较小，推荐搭配 Redis 减轻数据库负担</li></ul></li></ul><hr><h2 id="✅-总评（5-星为满）"><a href="#✅-总评（5-星为满）" class="headerlink" title="✅ 总评（5 星为满）"></a>✅ 总评（5 星为满）</h2><table><thead><tr><th>项目</th><th>评分</th><th>简评</th></tr></thead><tbody><tr><td>CPU 性能</td><td>⭐⭐⭐⭐</td><td>稳定可靠，适合轻量级应用</td></tr><tr><td>内存表现</td><td>⭐⭐⭐⭐</td><td>适合小型&#x2F;中型网站</td></tr><tr><td>网络质量</td><td>⭐⭐⭐⭐⭐</td><td>三网直连，延迟低体验好</td></tr><tr><td>磁盘性能</td><td>⭐⭐⭐⭐⭐</td><td>IO 高速，响应极快</td></tr><tr><td>应用兼容性</td><td>⭐⭐⭐⭐</td><td>支持多平台内容和访问</td></tr><tr><td>性价比</td><td>⭐⭐⭐⭐⭐</td><td>同价位中极具竞争力</td></tr></tbody></table><hr><h3 id="💡-高阶玩法指南"><a href="#💡-高阶玩法指南" class="headerlink" title="💡 高阶玩法指南"></a>💡 高阶玩法指南</h3><p><strong>「百元内价值榨取方案」</strong></p><ol><li><p><strong>多站托管</strong>：2G内存分配建议</p><ul><li>1个WordPress主站 + 3个Typecho子站</li><li>或 2个Laravel应用 + Redis缓存</li></ul></li><li><p><strong>流量精控</strong>：500GB&#x2F;月使用策略</p><ul><li>静态资源托管：可存储约2,500个PDF手册（200MB&#x2F;个）</li><li>API服务：支持日均30万次轻量请求</li></ul></li><li><p><strong>安全增强</strong>：零成本防御配置</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用防爆破策略（SSH示例）</span></span><br><span class="line"><span class="built_in">sudo</span> apt install fail2ban</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> /etc/fail2ban/jail.conf /etc/fail2ban/jail.local</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart fail2ban</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="🆚-竞品降维打击点"><a href="#🆚-竞品降维打击点" class="headerlink" title="🆚 竞品降维打击点"></a>🆚 竞品降维打击点</h3><table><thead><tr><th>功能项</th><th>同行常规款（80元档）</th><th>PCS.B型</th></tr></thead><tbody><tr><td>线路质量</td><td>普通BGP</td><td>三网精品混合</td></tr><tr><td>磁盘IO</td><td>300-500MB&#x2F;s</td><td><strong>1.6GB&#x2F;s</strong>（SSD加速）</td></tr><tr><td>流媒体解锁</td><td>部分平台</td><td><strong>全美区解锁</strong></td></tr><tr><td>防御体系</td><td>无DDoS防护</td><td>10G清洗+智能黑洞</td></tr></tbody></table><hr><h3 id="📈-运维监控建议"><a href="#📈-运维监控建议" class="headerlink" title="📈 运维监控建议"></a>📈 运维监控建议</h3><p><strong>新手友好工具推荐</strong>：</p><ol><li><strong>Uptime Kuma</strong>：一键部署服务器状态监控<figure class="highlight docker"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data louislam/uptime-kuma:1</span></span><br></pre></td></tr></table></figure></li><li><strong>轻量级资源看板</strong>：Netdata实时监控<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">bash &lt;(curl -Ss https://my-netdata.io/kickstart.sh)</span><br></pre></td></tr></table></figure></li></ol><hr><h3 id="❌-避坑指南：这些场景不适合"><a href="#❌-避坑指南：这些场景不适合" class="headerlink" title="❌ 避坑指南：这些场景不适合"></a>❌ 避坑指南：这些场景不适合</h3><ul><li>大型电商（日订单&gt;1,000单）：建议升级PCS.D型</li><li>视频直播推流：需额外购买流量包</li><li>深度学习训练：无GPU支持，仅适合推理中转</li></ul><hr><h3 id="🎯-总结推荐"><a href="#🎯-总结推荐" class="headerlink" title="🎯 总结推荐"></a>🎯 总结推荐</h3><blockquote><p>PCS.B 型以￥80&#x2F;月提供 <strong>千兆三网优化 + 全解锁美区流媒体 + 高 IOPS 存储性能</strong>，实测性能超越同价位竞品 30%+，非常适合需要中美双向低延迟、高响应、全功能支持的中小型项目部署。</p></blockquote><p>✅ 如果你在寻找一款<strong>高性价比、稳定回国、兼容流媒体&#x2F;AI 的美区 VPS</strong>，<strong>PCS.B 型绝对值得一试。</strong></p>]]></content>
      
      
      <categories>
          
          <category> VPS推荐 </category>
          
          <category> 测评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> VPS推荐 </tag>
            
            <tag> 服务器测评 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Qexo - 快速部署您的静态博客管理工具</title>
      <link href="/posts/3a88c12f.html"/>
      <url>/posts/3a88c12f.html</url>
      
        <content type="html"><![CDATA[<h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a><strong>引言</strong></h2><p><strong>Qexo</strong> 是一个基于Python的Hexo静态博客管理工具，支持在线编辑、实时预览、自动部署等功能。无需本地环境即可通过浏览器管理Hexo博客内容，适合追求轻量化和云端管理的用户。</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><a class="btn-anzhiyu green larger" href="https://github.com/am-abdj/Qexo"   title="Qexo GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Qexo GitHub</span></a><h2 id="一键部署到Vercel"><a href="#一键部署到Vercel" class="headerlink" title="一键部署到Vercel"></a>一键部署到Vercel</h2><p><a href="https://vercel.com/new/clone?repository-url=https://github.com/am-abdj/Qexo&env=DATABASE_URL,ALLOW_ACCOUNTS&envDescription=Database%20configuration%20and%20allowed%20accounts"><img src="https://vercel.com/button" alt="Deploy with Vercel"></a></p><p>点击上方按钮，按提示完成以下配置：</p><ol><li>连接你的GitHub账号</li><li>填写环境变量（部署后也可修改）：<ul><li><code>DATABASE_URL</code>: 数据库连接字符串（后文申请）</li><li><code>ALLOW_ACCOUNTS</code>: 允许登录的GitHub用户名（多个用英文逗号分隔）</li></ul></li></ol><hr><h2 id="免费数据库申请教程"><a href="#免费数据库申请教程" class="headerlink" title="免费数据库申请教程"></a>免费数据库申请教程</h2><h3 id="方案一：MongoDB-Atlas（推荐）"><a href="#方案一：MongoDB-Atlas（推荐）" class="headerlink" title="方案一：MongoDB Atlas（推荐）"></a>方案一：MongoDB Atlas（推荐）</h3><ol><li>访问 <a href="https://www.mongodb.com/atlas/database">MongoDB Atlas</a></li><li>注册账号后创建免费集群（M0套餐）</li><li>创建数据库用户并设置密码</li><li>在Network Access中添加IP白名单 <code>0.0.0.0/0</code></li><li>获取连接字符串：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongodb+srv://&lt;username&gt;:&lt;password&gt;@cluster0.xxxxx.mongodb.net/?retryWrites=true&amp;w=majority</span><br></pre></td></tr></table></figure></li></ol><h3 id="方案二：PlanetScale（MySQL兼容）"><a href="#方案二：PlanetScale（MySQL兼容）" class="headerlink" title="方案二：PlanetScale（MySQL兼容）"></a>方案二：PlanetScale（MySQL兼容）</h3><ol><li>访问 <a href="https://planetscale.com/">PlanetScale</a></li><li>创建免费数据库</li><li>获取连接字符串：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql://&lt;username&gt;:&lt;password&gt;@&lt;host&gt;/&lt;database&gt;?sslaccept=strict</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="手动部署到Vercel"><a href="#手动部署到Vercel" class="headerlink" title="手动部署到Vercel"></a>手动部署到Vercel</h2><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>Fork项目仓库：<a href="https://github.com/am-abdj/Qexo">https://github.com/am-abdj/Qexo</a></li><li>准备数据库连接字符串</li></ol><h3 id="部署步骤"><a href="#部署步骤" class="headerlink" title="部署步骤"></a>部署步骤</h3><ol><li>登录 <a href="https://vercel.com/">Vercel</a></li><li>新建Project → Import Git Repository</li><li>配置环境变量：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DATABASE_URL = 你的数据库连接字符串</span><br><span class="line">ALLOW_ACCOUNTS = 你的GitHub用户名</span><br></pre></td></tr></table></figure></li><li>点击Deploy等待完成（约2-5分钟）</li></ol><hr><h2 id="初始化配置"><a href="#初始化配置" class="headerlink" title="初始化配置"></a>初始化配置</h2><ol><li>访问部署完成的域名</li><li>首次访问需初始化：<ul><li>填写Hexo仓库地址（格式：<code>github用户名/仓库名</code>）</li><li>配置GitHub Token（需repo权限）</li></ul></li><li>完成基础设置后即可开始使用</li></ol><hr><h2 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h2><p>✅ 可视化文章编辑<br>✅ 实时预览Markdown<br>✅ 自动同步到GitHub仓库<br>✅ 多用户权限管理<br>✅ 支持自定义域名</p><hr><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="如何更新版本？"><a href="#如何更新版本？" class="headerlink" title="如何更新版本？"></a>如何更新版本？</h3><ol><li>进入Vercel项目的Git Integration设置</li><li>点击「Refresh Git Repository」</li><li>重新部署即可获取最新代码</li></ol><h3 id="数据库连接失败？"><a href="#数据库连接失败？" class="headerlink" title="数据库连接失败？"></a>数据库连接失败？</h3><ol><li>检查白名单设置是否允许所有IP</li><li>确认连接字符串中的用户名密码正确</li><li>尝试重启Vercel实例</li></ol><hr><p>通过本教程，您可以在10分钟内免费搭建完整的博客管理系统。Qexo+Vercel的组合提供了稳定的免费服务，配合MongoDB Atlas的512MB免费数据库，完全满足个人博客需求。</p><p>部署完成后，您可以通过 <code>/admin</code> 路径进入管理后台，开始发布内容管理您的Hexo博客！</p>]]></content>
      
      
      <categories>
          
          <category> 开源项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目推荐 </tag>
            
            <tag> Vercel </tag>
            
            <tag> GitHub项目 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Vercel 部署 Umami 网站统计服务 2025最新教程</title>
      <link href="/posts/14b7590f.html"/>
      <url>/posts/14b7590f.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://s.rmimg.com/2025-01-28/1738079292-848046-image.png" alt="Image description"></p><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><strong>Umami</strong> 是一个开源的自托管网站分析工具，主要用于提供简洁、隐私友好的网站访问数据统计。它是 Google Analytics 的替代方案，特别适用于希望保护用户隐私、不依赖第三方服务的个人和企业网站。</p><h3 id="Umami-的主要特点"><a href="#Umami-的主要特点" class="headerlink" title="Umami 的主要特点"></a><strong>Umami 的主要特点</strong></h3><p>✅ <strong>隐私保护</strong>：不使用 Cookie，不收集个人数据，符合 GDPR、CCPA 等隐私法规。<br>✅ <strong>开源自托管</strong>：基于 MIT 许可，可自行部署在服务器上，无需依赖外部服务。<br>✅ <strong>轻量高效</strong>：数据存储优化，不影响网站性能，支持 PostgreSQL 和 MySQL。<br>✅ <strong>实时分析</strong>：提供实时访问数据，包括页面浏览量、来源、设备类型、操作系统等。<br>✅ <strong>多网站管理</strong>：支持多个网站的访问数据分析，适合个人开发者和企业使用。<br>✅ <strong>简单易用</strong>：提供直观的仪表盘，可轻松查看访客流量、流量来源、热门页面等。<br>✅ <strong>API 支持</strong>：可通过 API 获取数据，方便与其他系统集成。</p><h3 id="Umami-部署方式"><a href="#Umami-部署方式" class="headerlink" title="Umami 部署方式"></a><strong>Umami 部署方式</strong></h3><p>你可以使用 <strong>Docker</strong> 进行快速部署，例如：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --name umami -p 3000:3000 \</span><br><span class="line">  -e DATABASE_URL=mysql://user:password@host:port/dbname \</span><br><span class="line">  ghcr.io/umami-software/umami:latest</span><br></pre></td></tr></table></figure><p>或者使用 <strong>Vercel</strong>、<strong>Railway</strong> 进行无服务器部署（本教程使用Vercel部署）。</p><h3 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a><strong>适用场景</strong></h3><ul><li><strong>个人博客</strong>：获取访问数据，优化内容策略。</li><li><strong>企业官网</strong>：监测用户行为，提高转化率。</li><li><strong>SaaS 平台</strong>：分析用户交互，优化产品体验。</li><li><strong>开发者项目</strong>：轻量级网站流量统计工具，替代 Google Analytics。</li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>Github 账号</li><li>Vercel 账号</li><li>数据库</li><li>自己的域名（可选）</li></ol><blockquote><p>部署完成之后默认会给你的项目分配一个 vercel.app 的三级域名，但是在 2021 年 vercel.app 域名被墙，大陆地区无法访问，因此强烈建议自己准备域名</p></blockquote><h3 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h3><ol><li>Fork 官方 <a href="https://github.com/umami-software/umami">GitHub 仓库</a><br><img src="https://s.rmimg.com/2025-01-28/1738079486-740535-image.png" alt="Image description"></li><li>打开 <a href="https://vercel.com/">Vercel </a>然后通过 GitHub 快捷登录<br><img src="https://s.rmimg.com/2025-01-28/1738079559-15797-image.png" alt="Image description"></li><li>打开 Storage 选项卡创建 PostgreSQL<br>不一定要在此处创建，可以在 <a href="https://supabase.com/">Supabase</a> 或 <a href="https://neon.tech/">Neon</a>（Vercel PostgreSQL 服务供应商）等平台免费创建<br><img src="https://s.rmimg.com/2025-01-28/1738079679-59906-image.png" alt="Image description"></li><li>打开 Dashboard，点击 Add new - Project</li><li>Import Git Repository 选择 Continue With GitHub<br>此时会跳转到 GitHub 批准 Vercel 访问，建议选择允许访问全部仓库，当然你也可以设置仅可访问部分仓库。</li></ol><p>6.选择你复刻的仓库</p><p>7.设置部署参数和环境变量：</p><ul><li>变量名：<code>HASH_SALT</code> 值：自定义字符串</li><li>变量名：<code>DATABASE_URL</code> 值：数据库链接</li><li>例：postgresql:&#x2F;&#x2F;username:mypassword@localhost:5432&#x2F;mydb mysql:&#x2F;&#x2F;username:mypassword@localhost:3306&#x2F;mydb</li><li><img src="https://s.rmimg.com/2025-01-28/1738079951-624780-image.png" alt="Image description"></li><li>变量名：<code>TRACKER_SCRIPT_NAME</code> 值：自定义统计脚本名</li></ul><p>最后点击 Deploy 部署<br><img src="https://s.rmimg.com/2025-01-29/1738080336-386846-image.png" alt="Image description"></p><p>9.部署成功后会显示 Congratulation 页面（部署时长三分钟左右）</p><ol start="10"><li>添加自定义域名，Vercel 会自动生成 SSL 证书（开启 https）</li></ol><p>打开 Umami，初次登录输入默认用户名 admin 与默认密码 umami（记得修改账号密码哦！）</p><p><img src="https://s.rmimg.com/2025-01-29/1738080268-247479-image.png" alt="Image description"></p><h3 id="API："><a href="#API：" class="headerlink" title="API："></a>API：</h3><p>可以参考这个：<a href="https://blog.ovvv.top/posts/4259ee82">漠北残月的博客的教程</a><br>推荐这个：<a href="https://blog.zhheo.com/p/61e9.html#%E2%80%9C%E6%88%91%E7%9A%84%E2%80%9D%E9%A1%B5%E9%9D%A2%E6%95%B0%E6%8D%AE">张洪HEO的教程</a></p>]]></content>
      
      
      <categories>
          
          <category> 开源项目 </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vercel </tag>
            
            <tag> 开源 </tag>
            
            <tag> 部署 </tag>
            
            <tag> Github </tag>
            
            <tag> 开源项目 </tag>
            
            <tag> 统计 </tag>
            
            <tag> Umami </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「水印照片」模仿小米照片风格，生成莱卡、苹果等水印开源项目</title>
      <link href="/posts/9029841e.html"/>
      <url>/posts/9029841e.html</url>
      
        <content type="html"><![CDATA[<h1 id="Picseal"><a href="#Picseal" class="headerlink" title="Picseal"></a>Picseal</h1><p>生成类似小米照片风格的莱卡水印照片。支持佳能、尼康、苹果、华为、小米、DJI 等设备的水印生成，可自动识别，也可自定义处理。</p><h2 id="在线演示"><a href="#在线演示" class="headerlink" title="在线演示"></a>在线演示</h2><p>在线试用地址：</p><ul><li><a href="https://picseal.vercel.app/">picseal.vercel.app</a></li><li><a href="https://picseal.zhiweio.me/">picseal.zhiweio.me</a></li><li><a href="https://zhiweio.github.io/picseal/">zhiweio.github.io&#x2F;picseal</a></li></ul><p><img src="https://img.503555.xyz/uploads/2025/02/07//50367a598bf8ab25.png" alt="应用截图"></p><h2 id="技术实现"><a href="#技术实现" class="headerlink" title="技术实现"></a>技术实现</h2><h3 id="EXIF-解析"><a href="#EXIF-解析" class="headerlink" title="EXIF 解析"></a>EXIF 解析</h3><p>使用了 Rust 库 <code>kamadak-exif</code> 从图片中提取得到 EXIF 信息并借助 WASM 技术嵌入前端 JavaScript 使用。</p><h3 id="水印生成"><a href="#水印生成" class="headerlink" title="水印生成"></a>水印生成</h3><p>通过 HTML 和 CSS 生成水印样式，能够做到动态调整实时预览。</p><h3 id="图片生成"><a href="#图片生成" class="headerlink" title="图片生成"></a>图片生成</h3><p>导出的图片是通过 <code>dom-to-image</code> JavaScript 库来将 DOM 转 JPEG&#x2F;PNG 等格式图片，请注意这种实现生成的是和原图完全不一样的图片，可以看作屏幕截图的方式。</p><p>目前针对 JPEG 格式图片新增了复制原图 EXIF 信息嵌进导出的图片中，目前的实现方式比较简单粗暴，直接从原图二进制数据提取 EXIF 部分的数据，再同样以二进制格式进行拼接，不能确保稳定。</p><h3 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h3><ul><li><input disabled="" type="checkbox"> 改用 Rust <code>little_exif</code> 库来实现对图片 EXIF 信息的读取和编辑。</li><li><input disabled="" type="checkbox"> 改用 Canvas 来实现水印，支持高度自定义。</li></ul><h2 id="部署方法"><a href="#部署方法" class="headerlink" title="部署方法"></a>部署方法</h2><h3 id="使用-Vercel-部署"><a href="#使用-Vercel-部署" class="headerlink" title="使用 Vercel 部署"></a>使用 Vercel 部署</h3><table><thead><tr><th align="center">一键部署到 Vercel</th></tr></thead><tbody><tr><td align="center"><a href="https://vercel.com/new/clone?repository-url=https://github.com/zhiweio/picseal&project-name=picseal&repository-name=picseal"><img src="https://vercel.com/button"></a></td></tr></tbody></table><h3 id="本地部署"><a href="#本地部署" class="headerlink" title="本地部署"></a>本地部署</h3><ol><li><p><strong>克隆项目代码</strong>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zhiweio/picseal</span><br></pre></td></tr></table></figure></li><li><p><strong>安装依赖</strong>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 安装 Rustup（编译器）</span></span><br><span class="line">curl --proto <span class="string">&#x27;=https&#x27;</span> --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 wasm-pack</span></span><br><span class="line">curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh -s -- -y</span><br></pre></td></tr></table></figure></li><li><p><strong>构建并运行</strong>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run build</span><br><span class="line">npm run preview</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用-GitHub-Pages-部署"><a href="#使用-GitHub-Pages-部署" class="headerlink" title="使用 GitHub Pages 部署"></a>使用 GitHub Pages 部署</h3><ol><li><p>修改 <code>vite.config.ts</code> 中的 <code>base</code> 配置为你的 GitHub Pages URL（例如：<code>https://&lt;USERNAME&gt;.github.io/&lt;REPO&gt;/</code>）：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> wasm <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-wasm&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">react</span>(),</span><br><span class="line">    <span class="title function_">wasm</span>(),</span><br><span class="line">    <span class="title function_">topLevelAwait</span>(),</span><br><span class="line">    <span class="title function_">visualizer</span>(&#123; <span class="attr">open</span>: <span class="literal">true</span> &#125;),</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">server</span>: &#123;</span><br><span class="line">    <span class="attr">port</span>: <span class="number">3000</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">build</span>: &#123;</span><br><span class="line">    <span class="attr">outDir</span>: <span class="string">&#x27;dist&#x27;</span>,</span><br><span class="line">    <span class="attr">target</span>: <span class="string">&#x27;esnext&#x27;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">optimizeDeps</span>: &#123;</span><br><span class="line">    <span class="attr">exclude</span>: [<span class="string">&#x27;picseal&#x27;</span>],</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">base</span>: <span class="string">&#x27;https://zhiweio.github.io/picseal/&#x27;</span>,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><strong>构建并部署</strong>：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install</span><br><span class="line">npm run pages</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用-Docker-部署"><a href="#使用-Docker-部署" class="headerlink" title="使用 Docker 部署"></a>使用 Docker 部署</h3><ol><li><p>拉取镜像</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker pull zhiweio/picseal:latest</span><br></pre></td></tr></table></figure></li><li><p>启动容器</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d -p 8080:80 picseal</span><br></pre></td></tr></table></figure></li><li><p>访问 <a href="http://localhost:8080/">http://localhost:8080</a></p></li></ol><h2 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h2><ul><li><a href="https://github.com/zhiweio">@Wang Zhiwei</a></li></ul><h2 id="开源协议"><a href="#开源协议" class="headerlink" title="开源协议"></a>开源协议</h2><p><a href="https://choosealicense.com/licenses/mit/">MIT</a></p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><a href="https://github.com/zhiweio/picseal" target="_blank" style="display: inline-flex; align-items: center; padding: 10px 20px; background-color: #24292e; color: #ffffff; text-decoration: none; border-radius: 5px; font-family: Arial, sans-serif; transition: background-color 0.3s;">  <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" style="margin-right: 8px;" viewBox="0 0 16 16">    <path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8a8 8 0 005.47 7.59c.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.22 2.2.82A7.63 7.63 0 018 4.68c.68.003 1.37.092 2.01.27 1.52-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.28.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.19 0 .21.15.46.55.38A8.01 8.01 0 0016 8c0-4.42-3.58-8-8-8z"/>  </svg>  GitHub</a><!-- 链接配置 -->]]></content>
      
      
      <categories>
          
          <category> 开源项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开源项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>聚合DNS管理系统</title>
      <link href="/posts/80c400c0.html"/>
      <url>/posts/80c400c0.html</url>
      
        <content type="html"><![CDATA[<h2 id="聚合DNS管理系统"><a href="#聚合DNS管理系统" class="headerlink" title="聚合DNS管理系统"></a>聚合DNS管理系统</h2><p>聚合DNS管理系统可以实现在一个网站内管理多个平台的域名解析，目前已支持的域名平台有：阿里云、腾讯云、华为云、百度云、西部数码、火山引擎、DNSLA、CloudFlare、Namesilo</p><h3 id="功能特性"><a href="#功能特性" class="headerlink" title="功能特性"></a>功能特性</h3><ul><li>多用户管理，可为每个用户可分配不同的域名解析权限</li><li>提供API接口，可获取域名单独的登录链接，方便各种IDC系统对接</li><li>容灾切换功能，支持ping、tcp、http(s)检测协议并自动暂停&#x2F;修改域名解析，并支持邮件、微信公众号、TG群机器人通知</li><li>CF优选IP功能，支持获取最新的Cloudflare优选IP，并自动更新到解析记录</li><li>SSL证书申请与自动部署功能，支持从Let’s Encrypt等渠道申请SSL证书，并自动部署到各种面板、云服务商、服务器等</li></ul><h2 id="V2-0-更新"><a href="#V2-0-更新" class="headerlink" title="V2.0 更新"></a>V2.0 更新</h2><p>彩虹聚合DNS管理系统 V2.0 版本已更新，该版本新增SSL证书申请与自动部署功能，支持从Let’s Encrypt等渠道申请SSL证书，并自动部署到各种面板、云服务商、服务器等，支持CNAME代理功能。</p><p><strong>支持的SSL证书申请方式：</strong></p><p>Let’s Encrypt、ZeroSSL、Google SSL、自定义ACME、腾讯云免费SSL、阿里云免费SSL、UCloud免费SSL</p><p><strong>支持的SSL证书部署方式：</strong></p><p>宝塔面板、1Panel、Kangle、雷池WAF、Cdnfly、LeCDN、GoEdge（FlexCDN）、</p><p>阿里云（CDN、ESA、SLB、OSS、WAF、FC等）、腾讯云（CDN、EO、CLB、COS、TKE、SCF等）、华为云（CDN、ELB、WAF）、UCloud CDN、七牛云（CDN、OSS）、多吉云CDN、百度云CDN、火山引擎CDN、白山云、AllWAF、AWS（CloudFront）、Gcore、Cachefly</p><p>SSH服务器（同时支持Linux&#x2F;Windows）、IIS、FTP服务器、复制到本机</p><p>除此之外，2.0版本还新增了登录TOTP二次验证功能。</p><h3 id="演示截图"><a href="#演示截图" class="headerlink" title="演示截图"></a>演示截图</h3><blockquote><p>添加域名账户</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678dda65c8284.png" alt="图片[1]-聚合DNS管理系统"></p><blockquote><p>域名管理列表</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678dda9eec537.png" alt="图片[2]-聚合DNS管理系统"></p><blockquote><p>域名DNS解析管理，支持解析批量操作</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddb04d1f3e.png" alt="图片[3]-聚合DNS管理系统"></p><blockquote><p>用户管理添加用户，支持为用户开启API接口</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddb4a327da.png" alt="图片[4]-聚合DNS管理系统"></p><blockquote><p>CF优选IP功能，添加优选IP任务</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddb7147878.png" alt="图片[5]-聚合DNS管理系统"></p><blockquote><p>SSL证书申请功能</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddb986bb5d.png" alt="图片[6]-聚合DNS管理系统"></p><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddbaec37a6.png" alt="图片[7]-聚合DNS管理系统"></p><blockquote><p>SSL证书自动部署功能</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddbc8d6707.png" alt="图片[8]-聚合DNS管理系统"></p><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddc66dd587.png" alt="图片[9]-聚合DNS管理系统"></p><blockquote><p>CNAME代理记录管理</p></blockquote><p><img src="https://img.503555.xyz/uploads/2025/01/20//503678ddc978f243.png" alt="图片[10]-聚合DNS管理系统"></p><h2 id="下载地址："><a href="#下载地址：" class="headerlink" title="下载地址："></a><strong>下载地址：</strong></h2><p><a href="https://github.com/netcccyun/dnsmgr/releases">https://github.com/netcccyun/dnsmgr/releases</a></p><h2 id="使用说明："><a href="#使用说明：" class="headerlink" title="使用说明："></a><strong>使用说明：</strong></h2><p>1、按照以下步骤使用：①添加计划任务 ②添加SSL证书账户 ③添加SSL证书订单 ④添加自动部署账户 ⑤添加自动部署任务</p><p>2、SSL证书申请可以控制台手动执行，也可以等待计划任务自动执行，推荐使用计划任务，控制台执行可能会超时。</p><p>3、国内服务器如需申请Google SSL，需要先配置代理</p><blockquote><p>转载文章：<br>1.<a href="https://blog.cccyun.cn/post-542.html">https://blog.cccyun.cn/post-542.html</a><br>2.<a href="https://github.com/netcccyun/dnsmgr">https://github.com/netcccyun/dnsmgr</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 开源项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DNS </tag>
            
            <tag> 聚合DNS管理系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Uptime Kuma的部署与简单使用</title>
      <link href="/posts/uk.html"/>
      <url>/posts/uk.html</url>
      
        <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><blockquote><p>原创文章：<a href="https://cloud.tencent.com/developer/article/2419591">https://cloud.tencent.com/developer/article/2419591</a></p></blockquote><p><a href="https://uptime.kuma.pet/">Uptime Kuma</a> 是一款开源自托管的轻量级监控工具，拥有简洁美观的界面和丰富的告警方式。</p><p><strong>准备</strong></p><ul><li><strong>CentOS</strong> 系统<strong>服务器</strong>（推荐<a href="https://www.rainyun.com/simon_">雨云服务器</a>）</li><li>SSH 工具（推荐 FinalShell）</li></ul><p><strong>注意</strong></p><p>本文可选步骤涉及 <strong>docker</strong> 和 docker-compose 或 1Panel面板的安装。</p><p>如果仅需要本地监控使用，可以不用<a href="https://www.rainyun.com/simon_">云服务器</a>而使用<strong>虚拟机</strong>或本地物理机（无需内网穿透）。</p><h2 id="2-安装方式"><a href="#2-安装方式" class="headerlink" title="2 安装方式"></a>2 安装方式</h2><p>在正式安装 Uptime Kuma 前，需要根据所选安装方式安装必要环境，如选用Docker安装则需要先安装Docker，选用1Panel面板安装则需要先安装1Panel面板</p><h3 id="2-1-Docker"><a href="#2-1-Docker" class="headerlink" title="2.1 Docker"></a>2.1 Docker</h3><p>Docker 是一个开源的应用<strong>容器</strong>引擎，容器是完全使用沙箱机制，它几乎没有性能开销，可以很容易地在机器和<strong>数据中心</strong>中运行，不依赖于任何语言、框架或包装系统</p><h4 id="2-1-1-安装Docker"><a href="#2-1-1-安装Docker" class="headerlink" title="2.1.1 安装Docker"></a>2.1.1 安装Docker</h4><p>安装 yum-utils</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">yum-utils是yum的工具包集合，需要用到其中的yum-config-manager</span></span><br><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><p>从国内服务器上下载 docker</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum-config-manager \ --add-repo \ http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>安装 docker</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> yum install -y docker-ce docker-ce-cli http://containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><p>验证 docker 是否安装成功</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> docker --version <span class="comment"># 出现版本号即为安装成功 # Docker version 24.0.6, build ed223bc</span></span><br></pre></td></tr></table></figure><h4 id="2-1-2-部署Uptime-Kuma"><a href="#2-1-2-部署Uptime-Kuma" class="headerlink" title="2.1.2 部署Uptime Kuma"></a>2.1.2 部署Uptime Kuma</h4><p>使用下方命令下载安装并启动Uptime Kuma</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run -d --restart=always -p 3001:3001 -v uptime-kuma:/app/data --name uptime-kuma louislam/uptime-kuma:1</span><br></pre></td></tr></table></figure><p>使用 <code>docker ps</code> 命令检查容器是否创建成功</p><p>前往云服务器控制台放行相关端口</p><p>访问 <code>IP + 端口</code> 打开安装引导页面</p><p>使用 <code>docker ps</code> 命令检查容器是否创建成功</p><p>前往云服务器控制台放行相关端口</p><p>访问 <code>IP + 端口</code> 打开安装引导页面</p><h3 id="2-2-Docker-Compose"><a href="#2-2-Docker-Compose" class="headerlink" title="2.2 Docker Compose"></a>2.2 Docker Compose</h3><p>Docker Compose 是 Docker 编排服务的一部分，可以让用户在集群中部署分布式应用</p><h4 id="2-1-1-安装Docker-Compose"><a href="#2-1-1-安装Docker-Compose" class="headerlink" title="2.1.1 安装Docker Compose"></a>2.1.1 安装Docker Compose</h4><p><em>方案一：手动安装</em></p><p>访问 <a href="https://github.com/docker/compose/releases">docker&#x2F;compose</a> 获取最新版本，选择文件名称为 <code>docker-compose-linux-x86_64</code> 下载并上传至 <code>/usr/local/bin/</code> 目录，并改名为<code>docker-compose</code>。</p><p><em>方案二：命令行安装</em></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载docker-compose文件并创建目录</span></span><br><span class="line"><span class="comment"># 可能较慢</span></span><br><span class="line">curl -L https://github.com/docker/compose/releases/download/2.21.0/docker-compose-`<span class="built_in">uname</span> -s`-`<span class="built_in">uname</span> -m` -o /usr/local/bin/docker-compose</span><br><span class="line"><span class="comment"># 将文件复制到/usr/local/bin环境变量下</span></span><br><span class="line"><span class="built_in">mv</span> docker-compose /usr/local/bin</span><br><span class="line"><span class="comment"># 给该文件执行权限</span></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>验证 docker-compose 是否安装成功</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose -v</span><br><span class="line"># 出现版本号即为安装成功</span><br><span class="line"># Docker Compose version v2.21.0</span><br></pre></td></tr></table></figure><p><em>方案三：pip方式安装</em></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 跳过卸载requests模块操作</span></span><br><span class="line"><span class="built_in">sudo</span> pip install --ignore-installed requests</span><br><span class="line"><span class="comment"># 安装docker-compose</span></span><br><span class="line">pip install docker-compose</span><br></pre></td></tr></table></figure><p>验证 docker-compose 是否安装成功</p><h4 id="2-1-2-部署Uptime-Kuma-1"><a href="#2-1-2-部署Uptime-Kuma-1" class="headerlink" title="2.1.2 部署Uptime Kuma"></a>2.1.2 部署Uptime Kuma</h4><p>在自定义位置创建 docker-compose.yml 文件，并填入以下内容按需修改</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3.3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">uptime-kuma:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">louislam/uptime-kuma</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">uptime-kuma</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./uptime-kuma:/app/data</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3001</span><span class="string">:3001</span></span><br></pre></td></tr></table></figure><p>执行创建并后台运行容器命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p>用 <code>docker ps</code> 命令检查容器是否创建成功</p><p>前往云服务器控制台放行相关端口</p><p>访问 <code>IP + 端口</code> 打开安装引导页面</p><h3 id="2-3-1Panel-面板"><a href="#2-3-1Panel-面板" class="headerlink" title="2.3 1Panel 面板"></a>2.3 1Panel 面板</h3><p>1Panel 是新一代的 <strong>Linux</strong> 服务器运维管理面板，可以帮助快速建站</p><h4 id="2-1-1-安装1Panel面板"><a href="#2-1-1-安装1Panel面板" class="headerlink" title="2.1.1 安装1Panel面板"></a>2.1.1 安装1Panel面板</h4><p>使用一键安装命令快速安装 1Panel 面板</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># RedHat / CentOS</span></span><br><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; sh quick_start.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu</span></span><br><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; <span class="built_in">sudo</span> bash quick_start.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># Debian</span></span><br><span class="line">curl -sSL https://resource.fit2cloud.com/1panel/package/quick_start.sh -o quick_start.sh &amp;&amp; bash quick_start.sh</span><br></pre></td></tr></table></figure><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f0fbfb8b2e.png" alt="图片[1]-Uptime Kuma的部署与简单使用"></p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f0fcc691bd.png" alt="图片[2]-Uptime Kuma的部署与简单使用"></p><h4 id="2-1-2-部署Uptime-Kuma-2"><a href="#2-1-2-部署Uptime-Kuma-2" class="headerlink" title="2.1.2 部署Uptime Kuma"></a>2.1.2 部署Uptime Kuma</h4><p>打开1Panel面板，找到Uptime Kuma，点击安装，进行相关配置后确定即可</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f0fe3125c6.png" alt="图片[3]-Uptime Kuma的部署与简单使用"></p><p>等待安装成功后，前往云服务器控制台放行相关端口，如果1Panel面板开启了<strong>防火墙</strong>，也需在<code>主机&gt;防火墙</code>中放行相关端口</p><p>访问 <code>IP + 端口</code> 打开安装引导页面</p><h2 id="3-进入Uptime-Kuma"><a href="#3-进入Uptime-Kuma" class="headerlink" title="3 进入Uptime Kuma"></a>3 进入Uptime Kuma</h2><p>安装完成 Uptime Kuma 后，访问 <code>IP + 端口</code> 打开安装引导页面</p><blockquote><p>注意要放行相关端口，是云服务器的前往云服务商控制台放行，是本地服务器的使用下方命令 # 放行3001端口 firewall-cmd –zone&#x3D;public –add-port&#x3D;3001&#x2F;tcp –permanent # 配置立即生效 sudo firewall-cmd –reload</p></blockquote><p>设置用户名和密码</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f0ff93f5ad.png" alt="图片[4]-Uptime Kuma的部署与简单使用"></p><p>自动跳转进入 Uptime Kuma 仪盘表</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f100809888.png" alt="图片[5]-Uptime Kuma的部署与简单使用"></p><h2 id="4-使用Uptime-Kuma"><a href="#4-使用Uptime-Kuma" class="headerlink" title="4 使用Uptime Kuma"></a>4 使用Uptime Kuma</h2><h3 id="4-1-创建监控项"><a href="#4-1-创建监控项" class="headerlink" title="4.1 创建监控项"></a>4.1 创建监控项</h3><p>点击添加监控项，可以选择要监控的类型，本节将以监控站点和监控MySQL数据库为例演示</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f111c8899d.png" alt="图片[6]-Uptime Kuma的部署与简单使用"></p><h4 id="4-1-1-监控站点"><a href="#4-1-1-监控站点" class="headerlink" title="4.1.1 监控站点"></a>4.1.1 监控站点</h4><p>监控类型选择 <code>HTTP(s)</code>，URL填写访问地址</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f112a9b517.png" alt="图片[7]-Uptime Kuma的部署与简单使用"></p><p>设置通知方式，如果该站点出现问题将以设置的通知方式提醒</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f120c8187c.png" alt="图片[8]-Uptime Kuma的部署与简单使用"></p><p>还可以添加描述和标签，对监控项做出解释和分类</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f121dac91f.png" alt="图片[9]-Uptime Kuma的部署与简单使用"></p><p>最后点击保存，监控项创建成功</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f1229eac94.png" alt="图片[10]-Uptime Kuma的部署与简单使用"></p><h4 id="4-1-2-监控MySQL数据库"><a href="#4-1-2-监控MySQL数据库" class="headerlink" title="4.1.2 监控MySQL数据库"></a>4.1.2 监控MySQL数据库</h4><p>监控类型选择 <code>MySQL/MariaDB</code>，连接字符串按提示填写，密码填写<strong>数据库</strong>密码</p><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">mysql:<span class="regexp">//</span>用户名:密码<span class="variable">@MySQL</span>地址:MySQL端口/数据库名</span><br></pre></td></tr></table></figure><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f123f1f055.png" alt="图片[11]-Uptime Kuma的部署与简单使用"></p><p>通知、描述、标签的设置同 4.1.1 监控站点，最后点击保存，监控项创建成功</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f125171acc.png" alt="图片[12]-Uptime Kuma的部署与简单使用"></p><h3 id="4-2-消息通知"><a href="#4-2-消息通知" class="headerlink" title="4.2 消息通知"></a>4.2 消息通知</h3><p>设置通知可以在设置&gt;通知中或在某一监控项中配置，点击设置通知，本节将以电子邮箱通知和Server酱为例演示</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f1260eef13.png" alt="图片[13]-Uptime Kuma的部署与简单使用"></p><p>4.2.1 电子邮箱<br>通知类型选择 电子邮箱（SMTP）</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f126ed8555.png" alt="图片[14]-Uptime Kuma的部署与简单使用"></p><p>其它项按如下配置：</p><ul><li>显示名称：管理列表显示的名称，自定义</li><li>主机名：服务器地址<ul><li>网易163邮箱：smtp.163.com</li><li>QQ邮箱：smtp.qq.com</li><li>阿里邮箱：smtp.aliyun.com</li></ul></li><li>端口：一般为465</li><li>安全性：选用 <code>TLS</code></li><li>用户名：邮箱用户名，如 <code>xxxxxx@163.com</code></li><li>密码：邮箱密码，一般为邮箱授权码，在邮箱设置中获得，如网易163邮箱</li></ul><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f12a6686dd.png" alt="图片[15]-Uptime Kuma的部署与简单使用"></p><ul><li>发信人：接收邮件显示的发信人，如 <code>mengya&lt;xxxxx@163.com&gt;</code></li><li>收信人：接收邮件的人，可与发信人一致，如 <code>xxxxx@163.com</code></li><li>抄送、密送：一种邮件转发功能，可不设置</li><li>邮件主题：邮件的标题，如 <code>&#123;&#123;NAME&#125;&#125;：&#123;&#123;STATUS&#125;&#125;</code><ul><li>：服务名称</li><li>：主机名或URL</li><li>：状态</li></ul></li><li>默认开启：新的监控项将默认启用此通知，建议开启</li><li>应用到所有现有监控项：现有的监控项启用此通知</li></ul><p>点击测试，收到一封主题为 <code>Test：⚠️ Test</code> 的邮件即为成功</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f135f66abb.png" alt="图片[16]-Uptime Kuma的部署与简单使用"></p><p>最后点击保存，如果有监控项出现问题，会收到邮件提醒</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f13708bcdb.png" alt="图片[17]-Uptime Kuma的部署与简单使用"></p><h4 id="4-2-2-Server酱"><a href="#4-2-2-Server酱" class="headerlink" title="4.2.2 Server酱"></a>4.2.2 Server酱</h4><p>Server酱，英文名为ServerChan，是一款专为程序员设计的通信软件，可以帮助与服务器之间进行通信。它允许用户在不需要安装客户端应用程序的情况下，通过网页界面的<strong>API</strong>将消息推送到服务器或智能设备。</p><p>简单来说，Server酱配置完成后可以在微信收到相应通知。</p><p>通知类型选择 <code>ServerChan (Server酱)</code></p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f137e7528f.png" alt="图片[18]-Uptime Kuma的部署与简单使用"></p><ul><li>显示名称：管理列表显示的名称，自定义</li><li>SendKey：在Server酱 SendKey中获取，需要登录关注公众号注册</li><li>默认开启：新的监控项将默认启用此通知，建议开启</li><li>应用到所有现有监控项：现有的监控项启用此通知</li></ul><p>点击测试，在 <code>方糖公众号</code> 收到内容为一条测试消息的通知即为成功</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f138f2782c.jpg" alt="图片[19]-Uptime Kuma的部署与简单使用"></p><p>最后点击保存，如果有监控项出现问题，会收到邮件提醒（下图为恢复正常的通知）</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f139ee5798.jpg" alt="图片[20]-Uptime Kuma的部署与简单使用"></p><h3 id="4-3-配置状态页面"><a href="#4-3-配置状态页面" class="headerlink" title="4.3 配置状态页面"></a>4.3 配置状态页面</h3><p>首先点击状态页面，添加新的状态页面</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f13ab7fd12.png" alt="图片[21]-Uptime Kuma的部署与简单使用"></p><ul><li>名称为页面显示的标题，如 <code>XX监控</code></li><li>路径为页面地址，如 <code>/status/flecdsm</code>，访问地址就为<code>https://dsm.talen.top/status/flecdsm</code></li></ul><p>在状态页面就可以进行一些页面个性化的设置</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f1417eef69.png" alt="图片[22]-Uptime Kuma的部署与简单使用"></p><ul><li>描述：页面介绍</li><li>底部自定义文本</li><li>主题：明暗设置、显示标签、显示 Powered By、显示证书有效期</li><li>自定义<strong>CSS</strong></li><li>添加分组：将监控项分类</li><li>添加监控项：添加在仪盘表已设置的监控项</li></ul><h3 id="4-4-其它设置"><a href="#4-4-其它设置" class="headerlink" title="4.4 其它设置"></a>4.4 其它设置</h3><p>在Uptime Kuma后台设置中，还可以进行很多丰富的设置，如外观、监控历史、备份等</p><p><img src="https://img.503555.xyz/uploads/2025/01/21//503678f1427a9fbd.png" alt="图片[23]-Uptime Kuma的部署与简单使用"></p><h2 id="5-写在最后"><a href="#5-写在最后" class="headerlink" title="5 写在最后"></a>5 写在最后</h2><p>Uptime Kuma的使用，提高了多站点用户对各站点监控的效率，页面私有部署让站长随时可以查看站点情况，配置通知可以让站长第一时间获取站点状态，合理使用状态页面还可以让其它用户了解自己的网站。本文详细展示了多种常见的安装方式和使用技巧，可以站长帮助快速搭建Uptime Kuma服务。</p>]]></content>
      
      
      <categories>
          
          <category> 开源项目 </category>
          
          <category> Github </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 监控 </tag>
            
            <tag> 开源 </tag>
            
            <tag> 部署 </tag>
            
            <tag> 教程 </tag>
            
            <tag> Github </tag>
            
            <tag> 开源项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4399云游戏自动进入脚本</title>
      <link href="/posts/7c6f7035.html"/>
      <url>/posts/7c6f7035.html</url>
      
        <content type="html"><![CDATA[<h2 id="脚本介绍"><a href="#脚本介绍" class="headerlink" title="脚本介绍"></a>脚本介绍</h2><p>此脚本可以在<a href="y.4399.com">4399云游戏</a>自动帮你进入游戏。</p><p>就算你在其他页面看视频还是什么，它都可以帮你自动进入游戏。</p><h2 id="我为啥要写这个脚本？"><a href="#我为啥要写这个脚本？" class="headerlink" title="我为啥要写这个脚本？"></a>我为啥要写这个脚本？</h2><p>因为我因为电脑配置太烂，而且手机储存不够的原因，我只能去玩云游戏。</p><p>官方云原神每天就送15分钟，我就去找一个免费的云游戏平台，最终发现了4399云游戏。</p><p>当我登陆4399的账号时，点击云玩原神……</p><p>排队人数1000多人！然后我进去看视频了， 结果看的太入迷，忘记去看我排在第几位了。当我返回去看时，它显示：你已超时未进入游戏，需要重启排队</p><p>我排了大概有50多分钟，居然要我重新排队！？所以这个脚本就诞生了，我行的过程中出现了各种问题，熬夜到凌晨2点才写好。</p><h2 id="使用这个脚本会出现啥问题？"><a href="#使用这个脚本会出现啥问题？" class="headerlink" title="使用这个脚本会出现啥问题？"></a>使用这个脚本会出现啥问题？</h2><p>在自动进入游戏时会被拦截，需要将y.4399.com的权限“弹出式窗口和重定向”改为允许。如果不改为允许，无法跳转到游戏页面，需要你再点击一下你云玩的游戏。</p><p>不过现在我将权限改成禁止后也可以跳转到游戏页面，不知道你们那边有没有这样的问题，可以在评论区反馈一下。</p><h2 id="如何安装这个脚本？"><a href="#如何安装这个脚本？" class="headerlink" title="如何安装这个脚本？"></a>如何安装这个脚本？</h2><p>需要浏览器装有 油猴（Tampermonkey）或者 暴力猴（Violentmonkey）扩展</p><p>谷歌浏览器下载（1是油猴，2是暴力猴）：</p><p>1.<a href="https://www.crxsoso.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo">Crt搜搜下载油猴</a>——<a href="https://chromewebstore.google.com/detail/jinjaccalgkegednnccohejagnlnfdag">谷歌扩展商店下载油猴(需翻墙)</a></p><p>2.<a href="https://www.crxsoso.com/webstore/detail/jinjaccalgkegednnccohejagnlnfdag">Crt搜搜下载暴力猴</a>——<a href="https://chrome.google.com/webstore/detail/dhdgffkkebhmkfjojejmpbldmpobfkfo">谷歌扩展商店下载暴力猴(需翻墙)</a></p><p>Edge浏览器下载：</p><p>1.<a href="https://www.crxsoso.com/addon/detail/iikmkjmpaadaobahmlepeloendndfphd">Crt搜搜下载油猴</a>——<a href="https://microsoftedge.microsoft.com/addons/detail/iikmkjmpaadaobahmlepeloendndfphd">Edge扩展商店下载油猴</a></p><p>2.<a href="https://www.crxsoso.com/addon/detail/eeagobfjdenkkddmbclomhiblgggliao">Crt搜搜下载暴力猴</a>——<a href="https://microsoftedge.microsoft.com/addons/detail/eeagobfjdenkkddmbclomhiblgggliao">Edge扩展商店下载暴力猴</a></p><p>其他浏览器我就不说了，大家可以自己百度怎么添加扩展。</p><p>360安全浏览器它也是可以安装扩展的，在360安全浏览器访问 360扩展程序 <mark class="hl-label orange">se://extensions</mark>  页面，打开右上角开发者模式将下载下来的谷歌扩展拖进去就可以了。</p><p>如果360工具栏不显示安装好的扩展，你需要打开360安全浏览器 设置&gt;界面设置 <mark class="hl-label orange">se://settings/uistyle</mark>  把工具栏的显示插件栏勾选上。</p><h3 id="脚本安装"><a href="#脚本安装" class="headerlink" title="脚本安装"></a>脚本安装</h3><p>访问<a href="https://greasyfork.org/zh-CN">Greasy Fork</a>网站搜索：<a href="https://greasyfork.org/zh-CN/scripts/486547">4399云游戏自动进入游戏脚本</a></p><p>点击下方安装也可以：</p><a class="btn-anzhiyu " href="https://update.greasyfork.org/scripts/486547/4399%E4%BA%91%E6%B8%B8%E6%88%8F%E8%87%AA%E5%8A%A8%E8%BF%9B%E5%85%A5%E6%B8%B8%E6%88%8F%E8%84%9A%E6%9C%AC.user.js"   title="快速安装"><span>快速安装</span></a><h2 id="脚本代码（不懂的可以不看）"><a href="#脚本代码（不懂的可以不看）" class="headerlink" title="脚本代码（不懂的可以不看）"></a>脚本代码（不懂的可以不看）</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         4399云游戏自动进入游戏脚本</span></span><br><span class="line"><span class="comment">// @namespace    http://tampermonkey.net/</span></span><br><span class="line"><span class="comment">// @version      1.0</span></span><br><span class="line"><span class="comment">// @description  它可以防止某个游戏排队人数太多，不想守着。当你装上脚本后，不管在哪个网页标签，只要打开着y.4399.com网站它可以在排队结束后自动进入游戏，非常方便！</span></span><br><span class="line"><span class="comment">// @author       飔梦</span></span><br><span class="line"><span class="comment">// @match        https://y.4399.com/*</span></span><br><span class="line"><span class="comment">// @exclude      https://y.4399.com/game/*</span></span><br><span class="line"><span class="comment">// @grant        GM_registerMenuCommand</span></span><br><span class="line"><span class="comment">// @grant        GM_notification</span></span><br><span class="line"><span class="comment">// @grant        GM_getValue</span></span><br><span class="line"><span class="comment">// @grant        GM_setValue</span></span><br><span class="line"><span class="comment">// @license      MIT</span></span><br><span class="line"><span class="comment">// @icon         https://y.4399.com/favicon.ico</span></span><br><span class="line"><span class="comment">// @downloadURL https://update.greasyfork.org/scripts/486547/4399%E4%BA%91%E6%B8%B8%E6%88%8F%E8%87%AA%E5%8A%A8%E8%BF%9B%E5%85%A5%E6%B8%B8%E6%88%8F%E8%84%9A%E6%9C%AC.user.js</span></span><br><span class="line"><span class="comment">// @updateURL https://update.greasyfork.org/scripts/486547/4399%E4%BA%91%E6%B8%B8%E6%88%8F%E8%87%AA%E5%8A%A8%E8%BF%9B%E5%85%A5%E6%B8%B8%E6%88%8F%E8%84%9A%E6%9C%AC.meta.js</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line">(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="string">&#x27;use strict&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入开关按钮和提示信息</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">insertSwitchButtonAndHintMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> switchButton = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;button&#x27;</span>);</span><br><span class="line">        switchButton.<span class="property">id</span> = <span class="string">&#x27;switchButton&#x27;</span>;</span><br><span class="line">        switchButton.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&#x27;position: fixed; bottom: 20px; left: 20px; background-color: #007bff; color: #fff; padding: 10px; border: none; cursor: pointer; font-size: 14px; border-radius: 5px; opacity: 0.8; transition: opacity 0.5s;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(switchButton);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> hintMessage = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">        hintMessage.<span class="property">id</span> = <span class="string">&#x27;hintMessage&#x27;</span>;</span><br><span class="line">        hintMessage.<span class="property">style</span>.<span class="property">cssText</span> = <span class="string">&#x27;position: fixed; top: 0; left: 0; width: 100%; background-color: #f8d7da; color: #721c24; text-align: center; padding: 10px; font-size: 16px; font-weight: bold; z-index: 9999; transition: top 0.5s;&#x27;</span>;</span><br><span class="line">        hintMessage.<span class="property">innerHTML</span> = <span class="string">&#x27;温馨提示：可能由于浏览器原因，在自动进入游戏时会被拦截，请将本站的权限“弹出式窗口和重定向”改为允许。如果不改为允许，无法跳转到游戏页面，需要你再点击一下你云玩的游戏。&#x27;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">appendChild</span>(hintMessage);</span><br><span class="line"></span><br><span class="line">        switchButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">toggleHintMessage</span>(switchButton);</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        switchButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseenter&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            switchButton.<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        switchButton.<span class="title function_">addEventListener</span>(<span class="string">&#x27;mouseleave&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            switchButton.<span class="property">style</span>.<span class="property">opacity</span> = <span class="string">&#x27;0.8&#x27;</span>;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="title function_">updateSwitchButtonText</span>(switchButton);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前是否显示提示信息</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">isShowHintMessage</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">GM_getValue</span>(<span class="string">&#x27;showHintMessage&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示或隐藏提示信息</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">toggleHintMessage</span>(<span class="params">switchButton</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> show = !<span class="title function_">isShowHintMessage</span>();</span><br><span class="line">        <span class="title function_">GM_setValue</span>(<span class="string">&#x27;showHintMessage&#x27;</span>, show);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> hintMessage = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hintMessage&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (hintMessage) &#123;</span><br><span class="line">            hintMessage.<span class="property">style</span>.<span class="property">top</span> = show ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;-100px&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (switchButton) &#123;</span><br><span class="line">            <span class="title function_">updateSwitchButtonText</span>(switchButton);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更新按钮文本</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">updateSwitchButtonText</span>(<span class="params">switchButton</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> show = <span class="title function_">isShowHintMessage</span>();</span><br><span class="line">        switchButton.<span class="property">innerHTML</span> = show ? <span class="string">&#x27;隐藏提示信息&#x27;</span> : <span class="string">&#x27;显示提示信息&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定时器间隔，单位毫秒</span></span><br><span class="line">    <span class="keyword">const</span> interval = <span class="number">1000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当前排队人数小于5时发送通知</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">notifyIfQueueIsSmall</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> queueNumElement = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.wait-nums .d2 span&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (queueNumElement) &#123;</span><br><span class="line">            <span class="keyword">const</span> queueNum = <span class="built_in">parseInt</span>(queueNumElement.<span class="property">innerText</span>);</span><br><span class="line">            <span class="keyword">const</span> hasNotified = <span class="title function_">GM_getValue</span>(<span class="string">&#x27;hasNotified&#x27;</span>, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (queueNum &lt; <span class="number">5</span> &amp;&amp; !hasNotified) &#123;</span><br><span class="line">                <span class="title function_">GM_notification</span>(&#123;</span><br><span class="line">                    <span class="attr">text</span>: <span class="string">`当前排队人数为<span class="subst">$&#123;queueNum&#125;</span>人，即将为你自动进入游戏。`</span>,</span><br><span class="line">                    <span class="attr">title</span>: <span class="string">&#x27;4399云游戏&#x27;</span>,</span><br><span class="line">                    <span class="attr">timeout</span>: <span class="number">10</span>,</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                <span class="title function_">GM_setValue</span>(<span class="string">&#x27;hasNotified&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检测排队结束并点击立即进入</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">checkAndEnterGame</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> teamingPopup = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.pop.teaming&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (teamingPopup) &#123;</span><br><span class="line">            <span class="keyword">const</span> enterButton = teamingPopup.<span class="title function_">querySelector</span>(<span class="string">&#x27;.i2&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span> (enterButton) &#123;</span><br><span class="line">                enterButton.<span class="title function_">click</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 主循环</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">mainLoop</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> waitingPopup = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;.pop.waiting&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (waitingPopup) &#123;</span><br><span class="line">            <span class="comment">// 在排队页面</span></span><br><span class="line">            <span class="title function_">notifyIfQueueIsSmall</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 不在排队页面</span></span><br><span class="line">            <span class="title function_">GM_setValue</span>(<span class="string">&#x27;hasNotified&#x27;</span>, <span class="literal">false</span>); <span class="comment">// 重置已通知标志</span></span><br><span class="line">            <span class="title function_">checkAndEnterGame</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 启动脚本</span></span><br><span class="line">    <span class="title function_">insertSwitchButtonAndHintMessage</span>();</span><br><span class="line">    <span class="built_in">setInterval</span>(mainLoop, interval);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始时根据设置显示或隐藏提示信息</span></span><br><span class="line">    <span class="keyword">const</span> hintMessage = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;hintMessage&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (hintMessage) &#123;</span><br><span class="line">        hintMessage.<span class="property">style</span>.<span class="property">top</span> = <span class="title function_">isShowHintMessage</span>() ? <span class="string">&#x27;0&#x27;</span> : <span class="string">&#x27;-100px&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 脚本菜单</span></span><br><span class="line">    <span class="title function_">GM_registerMenuCommand</span>(<span class="string">&#x27;作者个人主页&#x27;</span>, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">window</span>.<span class="title function_">open</span>(<span class="string">&#x27;https://home.syyxin.eu.org&#x27;</span>, <span class="string">&#x27;_blank&#x27;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure><h2 id="视频演示"><a href="#视频演示" class="headerlink" title="视频演示"></a>视频演示</h2><div class="video"><video controls preload><source src='https://dns.xxslol.link/mp4/24.mp4' type='video/mp4'>Your browser does not support the video tag.</video></div><h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>如果该脚本侵害了4399云游戏平台的权益，请联系<a href="mailto:&#115;&#121;&#x79;&#98;&#x69;&#108;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#x6d;">&#115;&#121;&#x79;&#98;&#x69;&#108;&#105;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#x6d;</a>删除。</p>]]></content>
      
      
      <categories>
          
          <category> 软件分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 油猴脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本站</title>
      <link href="/posts/8b8a8c83.html"/>
      <url>/posts/8b8a8c83.html</url>
      
        <content type="html"><![CDATA[<h2 id="站点介绍"><a href="#站点介绍" class="headerlink" title="站点介绍"></a>站点介绍</h2><p>梦芽博客是一个记录个人学习和生活的网站，主要分享一些编程、设计、笔记等方面的内容。本站使用 hexo + github + vercel 搭建，采用了简洁优雅的主题。<br>梦芽，这个名字是我在创建博客时想出来的。寓意我对未来的美好期待，就像一颗种子在梦中发芽，等待着开出绚丽的花朵</p><h2 id="站长信息"><a href="#站长信息" class="headerlink" title="站长信息"></a>站长信息</h2><p>我是梦芽，一名热爱编程和创造的学生。我喜欢探索新技术，尝试不同的项目，分享自己的心得和经验。我希望通过本站和大家交流学习，共同进步。</p><h2 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><p>如果你有任何问题或建议，欢迎通过以下方式联系我：</p><ul><li>邮箱：<a href="mailto:&#49;&#x33;&#x36;&#49;&#57;&#55;&#55;&#x35;&#52;&#x40;&#113;&#113;&#46;&#99;&#111;&#x6d;">&#49;&#x33;&#x36;&#49;&#57;&#55;&#55;&#x35;&#52;&#x40;&#113;&#113;&#46;&#99;&#111;&#x6d;</a></li><li>微信：dr-190</li><li>QQ：136197754</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 说说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【BBDown】命令行哔哩哔哩下载器（支持下载TV无水印片源，支持Win/Linux/Mac）</title>
      <link href="/posts/c6d88a0.html"/>
      <url>/posts/c6d88a0.html</url>
      
        <content type="html"><![CDATA[<h1 id="BBDown"><a href="#BBDown" class="headerlink" title="BBDown"></a>BBDown</h1><p>一款命令行式哔哩哔哩下载器. Bilibili Downloader.</p><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>本软件混流时需要外部程序：</p><ul><li>普通视频：<a href="https://www.gyan.dev/ffmpeg/builds/">ffmpeg</a> ，或 <a href="https://gpac.wp.imt.fr/downloads/">mp4box</a></li><li>杜比视界：ffmpeg5.0以上或新版mp4box.</li></ul><h1 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h1><p>本软件已经以 <a href="https://www.nuget.org/packages/BBDown/">Dotnet Tool</a> 形式发布</p><p>如果你本地有dotnet环境，使用如下命令即可安装使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet tool install --global BBDown</span><br></pre></td></tr></table></figure><p>如果需要更新bbdown，使用如下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet tool update --global BBDown</span><br></pre></td></tr></table></figure><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>Release版本：<a href="https://github.com/nilaoda/BBDown/releases">https://github.com/nilaoda/BBDown/releases</a></p><p>自动构建的测试版本：<a href="https://github.com/nilaoda/BBDown/actions">https://github.com/nilaoda/BBDown/actions</a></p><h1 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h1><div class="note warning simple"><p>下载无水印视频需要登录云视听小电视账号，部分视频可能还是会有水印，一般很火的视频是没有水印的。</p></div><p>目前命令行参数支持情况</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Description:</span><br><span class="line">  BBDown是一个免费且便捷高效的哔哩哔哩下载/解析软件.</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  BBDown &lt;url&gt; [command] [options]</span><br><span class="line"></span><br><span class="line">Arguments:</span><br><span class="line">  &lt;url&gt;  视频地址 或 av|bv|BV|ep|ss</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -tv, --use-tv-api                              使用TV端解析模式</span><br><span class="line">  -app, --use-app-api                            使用APP端解析模式</span><br><span class="line">  -intl, --use-intl-api                          使用国际版(东南亚视频)解析模式</span><br><span class="line">  --use-mp4box                                   使用MP4Box来混流</span><br><span class="line">  -e, --encoding-priority &lt;encoding-priority&gt;    视频编码的选择优先级, 用逗号分割 例: &quot;hevc,av1,avc&quot;</span><br><span class="line">  -q, --dfn-priority &lt;dfn-priority&gt;              画质优先级,用逗号分隔 例: &quot;8K 超高清, 1080P 高码率, HDR 真彩, 杜比视界&quot;</span><br><span class="line">  -info, --only-show-info                        仅解析而不进行下载</span><br><span class="line">  --show-all                                     展示所有分P标题</span><br><span class="line">  --use-aria2c                                   调用aria2c进行下载(你需要自行准备好二进制可执行文件)</span><br><span class="line">  -ia, --interactive                             交互式选择清晰度</span><br><span class="line">  -hs, --hide-streams                            不要显示所有可用音视频流</span><br><span class="line">  -mt, --multi-thread                            使用多线程下载(默认开启)</span><br><span class="line">  --video-only                                   仅下载视频</span><br><span class="line">  --audio-only                                   仅下载音频</span><br><span class="line">  --danmaku-only                                 仅下载弹幕</span><br><span class="line">  --sub-only                                     仅下载字幕</span><br><span class="line">  --cover-only                                   仅下载封面</span><br><span class="line">  --debug                                        输出调试日志</span><br><span class="line">  --skip-mux                                     跳过混流步骤</span><br><span class="line">  --skip-subtitle                                跳过字幕下载</span><br><span class="line">  --skip-cover                                   跳过封面下载</span><br><span class="line">  --force-http                                   下载音视频时强制使用HTTP协议替换HTTPS(默认开启)</span><br><span class="line">  -dd, --download-danmaku                        下载弹幕</span><br><span class="line">  --skip-ai                                      跳过AI字幕下载(默认开启)</span><br><span class="line">  --video-ascending                              视频升序(最小体积优先)</span><br><span class="line">  --audio-ascending                              音频升序(最小体积优先)</span><br><span class="line">  --allow-pcdn                                   不替换PCDN域名, 仅在正常情况与--upos-host均无法下载时使用</span><br><span class="line">  -F, --file-pattern &lt;file-pattern&gt;              使用内置变量自定义单P存储文件名:</span><br><span class="line"></span><br><span class="line">                                                 &lt;videoTitle&gt;: 视频主标题</span><br><span class="line">                                                 &lt;pageNumber&gt;: 视频分P序号</span><br><span class="line">                                                 &lt;pageNumberWithZero&gt;: 视频分P序号(前缀补零)</span><br><span class="line">                                                 &lt;pageTitle&gt;: 视频分P标题</span><br><span class="line">                                                 &lt;bvid&gt;: 视频BV号</span><br><span class="line">                                                 &lt;aid&gt;: 视频aid</span><br><span class="line">                                                 &lt;cid&gt;: 视频cid</span><br><span class="line">                                                 &lt;dfn&gt;: 视频清晰度</span><br><span class="line">                                                 &lt;res&gt;: 视频分辨率</span><br><span class="line">                                                 &lt;fps&gt;: 视频帧率</span><br><span class="line">                                                 &lt;videoCodecs&gt;: 视频编码</span><br><span class="line">                                                 &lt;videoBandwidth&gt;: 视频码率</span><br><span class="line">                                                 &lt;audioCodecs&gt;: 音频编码</span><br><span class="line">                                                 &lt;audioBandwidth&gt;: 音频码率</span><br><span class="line">                                                 &lt;ownerName&gt;: 上传者名称</span><br><span class="line">                                                 &lt;ownerMid&gt;: 上传者mid</span><br><span class="line">                                                 &lt;publishDate&gt;: 发布时间</span><br><span class="line">                                                 &lt;apiType&gt;: API类型(TV/APP/INTL/WEB)</span><br><span class="line"></span><br><span class="line">                                                 默认为: &lt;videoTitle&gt;</span><br><span class="line">  -M, --multi-file-pattern &lt;multi-file-pattern&gt;  使用内置变量自定义多P存储文件名:</span><br><span class="line"></span><br><span class="line">                                                 默认为: &lt;videoTitle&gt;/[P&lt;pageNumberWithZero&gt;]&lt;pageTitle&gt;</span><br><span class="line">  -p, --select-page &lt;select-page&gt;                选择指定分p或分p范围: (-p 8 或 -p 1,2 或 -p 3-5 或 -p ALL 或 -p LAST)</span><br><span class="line">  --language &lt;language&gt;                          设置混流的音频语言(代码), 如chi, jpn等</span><br><span class="line">  -ua, --user-agent &lt;user-agent&gt;                 指定user-agent, 否则使用随机user-agent</span><br><span class="line">  -c, --cookie &lt;cookie&gt;                          设置字符串cookie用以下载网页接口的会员内容</span><br><span class="line">  -token, --access-token &lt;access-token&gt;          设置access_token用以下载TV/APP接口的会员内容</span><br><span class="line">  --aria2c-args &lt;aria2c-args&gt;                    调用aria2c的附加参数(默认参数包含&quot;-x16 -s16 -j16 -k 5M&quot;, 使用时注意字符串转义)</span><br><span class="line">  --work-dir &lt;work-dir&gt;                          设置程序的工作目录</span><br><span class="line">  --ffmpeg-path &lt;ffmpeg-path&gt;                    设置ffmpeg的路径</span><br><span class="line">  --mp4box-path &lt;mp4box-path&gt;                    设置mp4box的路径</span><br><span class="line">  --aria2c-path &lt;aria2c-path&gt;                    设置aria2c的路径</span><br><span class="line">  --upos-host &lt;upos-host&gt;                        自定义upos服务器</span><br><span class="line">  --force-replace-host                           强制替换下载服务器host(默认开启)</span><br><span class="line">  --delay-per-page &lt;delay-per-page&gt;              设置下载合集分P之间的下载间隔时间(单位: 秒, 默认无间隔)</span><br><span class="line">  --host &lt;host&gt;                                  指定BiliPlus host(使用BiliPlus需要access_token, 不需要cookie, 解析服务器能够获取你账号的大部分权限!)</span><br><span class="line">  --ep-host &lt;ep-host&gt;                            指定BiliPlus EP host(用于代理api.bilibili.com/pgc/view/web/season, 大部分解析服务器不支持代理该接口)</span><br><span class="line">  --area &lt;area&gt;                                  (hk|tw|th) 使用BiliPlus时必选, 指定BiliPlus area</span><br><span class="line">  --config-file &lt;config-file&gt;                    读取指定的BBDown本地配置文件(默认为: BBDown.config)</span><br><span class="line">  --version                                      Show version information</span><br><span class="line">  -?, -h, --help                                 Show help and usage information</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">  login    通过APP扫描二维码以登录您的WEB账号</span><br><span class="line">  logintv  通过APP扫描二维码以登录您的TV账号</span><br></pre></td></tr></table></figure><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul><li><input checked="" disabled="" type="checkbox"> 番剧下载(Web|TV|App)</li><li><input checked="" disabled="" type="checkbox"> 课程下载(Web)</li><li><input checked="" disabled="" type="checkbox"> 普通内容下载(Web|TV|App)</li><li><input checked="" disabled="" type="checkbox"> 合集&#x2F;列表&#x2F;收藏夹&#x2F;个人空间解析</li><li><input checked="" disabled="" type="checkbox"> 多分P自动下载</li><li><input checked="" disabled="" type="checkbox"> 选择指定分P进行下载</li><li><input checked="" disabled="" type="checkbox"> 选择指定清晰度进行下载</li><li><input checked="" disabled="" type="checkbox"> 下载外挂字幕并转换为srt格式</li><li><input checked="" disabled="" type="checkbox"> 自动合并音频+视频流+字幕流+<strong>章节信息</strong><code>(使用ffmpeg或mp4box)</code></li><li><input checked="" disabled="" type="checkbox"> 单独下载视频&#x2F;音频&#x2F;字幕</li><li><input checked="" disabled="" type="checkbox"> 二维码登录账号</li><li><input checked="" disabled="" type="checkbox"> 多线程下载</li><li><input checked="" disabled="" type="checkbox"> 支持调用aria2c下载</li><li><input checked="" disabled="" type="checkbox"> 支持AVC&#x2F;HEVC&#x2F;AV1编码</li><li><input checked="" disabled="" type="checkbox"> <strong>支持8K&#x2F;HDR&#x2F;杜比视界&#x2F;杜比全景声下载</strong></li><li><input checked="" disabled="" type="checkbox"> 自定义存储文件名</li></ul><h1 id="TODO"><a href="#TODO" class="headerlink" title="TODO"></a>TODO</h1><ul><li><input disabled="" type="checkbox"> 自动刷新cookie</li><li><input disabled="" type="checkbox"> 支持更多自定义选项</li></ul><h1 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h1><details class="folding-tag" green><summary> 配置文件 (NEW) </summary>              <div class='content'>              <hr><p>在<code>1.4.9</code>或更高版本中，BBDown支持读取本地配置文件以简化命令行的手动输入。</p><p>如果用户没有指定<code>--config-file</code>，则默认读取程序同目录下的<code>BBDown.config</code>文件；若用户指定，则读取特定文件。</p><p>一个典型的配置文件:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#本文件是BBDown程序的配置文件</span><br><span class="line">#以#开头的都会被程序忽略</span><br><span class="line">#然后剩余非空白内容程序逐行读取，对于一个选项，其参数应当在下一行出现</span><br><span class="line"></span><br><span class="line">#例如下面将设置输出文件名格式</span><br><span class="line">--file-pattern</span><br><span class="line">&lt;videoTitle&gt;[&lt;dfn&gt;]</span><br><span class="line"></span><br><span class="line">--multi-file-pattern</span><br><span class="line">&lt;videoTitle&gt;/[P&lt;pageNumberWithZero&gt;]&lt;pageTitle&gt;[&lt;dfn&gt;]</span><br><span class="line"></span><br><span class="line">#下面设置下载多个分P时，每个分P的下载间隔为2秒</span><br><span class="line">--delay-per-page</span><br><span class="line">2</span><br><span class="line"></span><br><span class="line">#开启弹幕下载功能</span><br><span class="line">--download-danmaku</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" green><summary> 自定义输出文件名格式 (NEW) </summary>              <div class='content'>              <hr><p>在<code>1.4.9</code>或更高版本中，BBDown支持用户自定义合并时的文件名组成。</p><table><thead><tr><th>代码</th><th>含义</th></tr></thead><tbody><tr><td><code>&lt;videoTitle&gt;</code></td><td>视频主标题</td></tr><tr><td><code>&lt;pageNumber&gt;</code></td><td>视频分P序号</td></tr><tr><td><code>&lt;pageNumberWithZero&gt;</code></td><td>视频分P序号(前缀补零)</td></tr><tr><td><code>&lt;pageTitle&gt;</code></td><td>视频分P标题</td></tr><tr><td><code>&lt;bvid&gt;</code></td><td>视频BV号</td></tr><tr><td><code>&lt;aid&gt;</code></td><td>视频aid</td></tr><tr><td><code>&lt;cid&gt;</code></td><td>视频cid</td></tr><tr><td><code>&lt;dfn&gt;</code></td><td>视频清晰度</td></tr><tr><td><code>&lt;res&gt;</code></td><td>视频分辨率</td></tr><tr><td><code>&lt;fps&gt;</code></td><td>视频帧率</td></tr><tr><td><code>&lt;videoCodecs&gt;</code></td><td>视频编码</td></tr><tr><td><code>&lt;videoBandwidth&gt;</code></td><td>视频码率</td></tr><tr><td><code>&lt;audioCodecs&gt;</code></td><td>音频编码</td></tr><tr><td><code>&lt;audioBandwidth&gt;</code></td><td>音频码率</td></tr><tr><td><code>&lt;ownerName&gt;</code></td><td>上传者名称(下载番剧时，该值为””)</td></tr><tr><td><code>&lt;ownerMid&gt;</code></td><td>上传者mid(下载番剧时，该值为””)</td></tr><tr><td><code>&lt;publishDate&gt;</code></td><td>发布时间(yyyy-MM-dd_HH-mm-ss)</td></tr><tr><td><code>&lt;apiType&gt;</code></td><td>API类型（TV&#x2F;APP&#x2F;INTL&#x2F;WEB）</td></tr></tbody></table>              </div>            </details><details class="folding-tag" green><summary> WEB/TV鉴权 </summary>              <div class='content'>              <hr><p>扫码登录网页账号：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown login</span><br></pre></td></tr></table></figure><p>然后按照提示操作</p><p>扫码登录云视听小电视账号：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown logintv</span><br></pre></td></tr></table></figure><p>然后按照提示操作</p><p><em>PS: 如果登录报错<code>The type initializer for &#39;Gdip&#39; threw an exception</code>，请参考 <a href="https://github.com/nilaoda/BBDown/issues/37">#37</a> 解决</em></p><p>手动加载网页cookie：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -c &quot;SESSDATA=******&quot; &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;</span><br></pre></td></tr></table></figure><p>手动加载云视听小电视token：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -tv -token &quot;******&quot; &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" green><summary> APP鉴权 </summary>              <div class='content'>              <hr><blockquote><p>根据 <a href="https://github.com/nilaoda/BBDown/issues/123#issuecomment-877583825">#123</a> ，可以填写TV登录产生的<code>access_token</code>来给APP接口使用。可复制<code>BBDownTV.data</code>到<code>BBDownApp.data</code>使程序自动读取.</p></blockquote><p>目前程序无法自动获取鉴权信息，推荐通过<strong>抓包</strong>来获取.</p><p>在请求Header中寻找键为<code>authorization</code>的项，其值形为<code>identify_v1 5227************1</code>，其中的<code>5227************1</code>就是token(access_key)</p><p>获取后手动通过<code>-token</code>命令加载, 或写入<code>BBDownApp.data</code>使程序自动读取.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -app -token &quot;******&quot; &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" green><summary> 常用命令 </summary>              <div class='content'>              <hr><p>下载普通视频：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;</span><br></pre></td></tr></table></figure><p>使用TV接口下载(粉丝量大的UP主基本上是无水印片源)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -tv &quot;https://www.bilibili.com/video/BV1qt4y1X7TW&quot;</span><br></pre></td></tr></table></figure><p>当分P过多时，默认会隐藏展示全部的分P信息，你可以使用如下命令来显示所有每一个分P。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown --show-all &quot;https://www.bilibili.com/video/BV1At41167aj&quot;</span><br></pre></td></tr></table></figure><p>选择下载某些分P的三种情况：</p><ul><li>单个分P：10</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown &quot;https://www.bilibili.com/video/BV1At41167aj?p=10&quot;</span><br><span class="line">BBDown -p 10 &quot;https://www.bilibili.com/video/BV1At41167aj&quot;</span><br></pre></td></tr></table></figure><ul><li>多个分P：1,2,10</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -p 1,2,10 &quot;https://www.bilibili.com/video/BV1At41167aj&quot;</span><br></pre></td></tr></table></figure><ul><li>范围分P：1-10</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -p 1-10 &quot;https://www.bilibili.com/video/BV1At41167aj&quot;</span><br></pre></td></tr></table></figure><p>下载番剧全集：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BBDown -p ALL &quot;https://www.bilibili.com/bangumi/play/ss33073&quot;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" green><summary> API服务器 </summary>              <div class='content'>              <p>启动服务器（自定义监听地址和端口）：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">BBDown server -l http://0.0.0.0:12450</span><br></pre></td></tr></table></figure><p>API服务器不支持HTTPS配置，如果有需要请自行使用nginx等反向代理进行配置</p><p>API详细请参考<a href="https://github.com/nilaoda/BBDown/blob/master/json-api-doc.md">json-api-doc.md</a></p>              </div>            </details><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><p><img src="https://i.loli.net/2020/08/16/iNF961RU7lyeEZc.gif" alt="1"></p><p>下载完毕后在当前目录查看MP4文件：</p><p><img src="https://i.loli.net/2020/08/16/kJqtAp4U1jDW5vm.png" alt="2"></p>]]></content>
      
      
      <categories>
          
          <category> 软件分享 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件分享 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
